# Selenium Web Automation - Find Below:

from selenium import webdriver
from selenium.webdriver.common.keys import Keys

# With Keys

Driver = webdriver.Firefox(executable_path='C:\\Users\\Mrinu\\Downloads\\geckodriver-v0.27.0-win64\\geckodriver')
Driver.get('https://stackoverflow.com/')
SearchBox = Driver.find_element_by_xpath('/html/body/header/div/form/div/input')
SearchBox.send_keys('Selenium Automation')
SearchBox.send_keys(Keys.ENTER)

# With Button

Driver2 = webdriver.Firefox(executable_path='C:\\Users\\Mrinu\\Downloads\\geckodriver-v0.27.0-win64\\geckodriver')
Driver2.get('https://github.com/')
SignInButton = Driver2.find_element_by_xpath('/html/body/div[1]/header/div/div[2]/div[2]/a[1]')
SignInButton.click()
LoginID = Driver2.find_element_by_xpath('//*[@id="login_field"]')
LoginID.send_keys('AnalystMrinal')
Password = Driver2.find_element_by_xpath('//*[@id="password"]')
Password.send_keys('@n@lyst1994')
LoginButton = Driver2.find_element_by_xpath('/html/body/div[3]/main/div/form/div[4]/input[9]')
LoginButton.click()




# OS Package:

import os

# Checking Directory

os.listdir('Path')




# Pandas Package:

import pandas as pd

# Manual DataFrame

pd.DataFrame({"Column_1":[],
              "Column_2":[],
              "Column_3":[]},index=['Row1','Row2'])
              
# Importing Excel or CSV File

pd.read_csv('Drive:\\path\\FileName')




# pip install sqlalchemy - from sqlalchemy import create_engine

# Importing Data from Relational Database

Path = create_engine('Drive:\\database_path\\database.db')
Connect = path.connect()
Result = connect.execute("SELECT * FROM table")
Specific_Results = pd.DataFrame(Result.fetchall or Result.Fetchmany(size=4))




# import requests
# from bs4 import BeautifulSoup

# WEBSCRAPING 







# Checking the Data 

DataFrame.describe() - Like "Summary()" in R Programming - Provides everything except for median
DataFrame.info() - Like STR in R Programming - Data Type, Missing Values, Data Structure - Like class in R Programming





# Changing the Headings: DataFrame.rename(columns={"Col1":"New_Col1","Col2":"New_Col2"}) or 

Elements within the DataFrame:

Dealing with Missing Data - 



Dealing with Skewed Data - Outliers




# Elements within the DataFrame - Int (Discrete Data), Float (Continuous), String with multiple levels - Ordinal or Nominal
  Anova - Dep Var (Continuous), Indep Var (Discrete)
  Regression - Dep Var (Continuous), Indep Var (Continuous)
  CART (Decision Trees) - Dep Var (Discrete), Indep Var (Discrete, Continuous)
  Random Forest (Classification Model) - Dep Var (Discrete), Indep Var (Discrete, Continuous)
  Logistic Regression - Dep Var (Discrete) , Indep Var (Continuous)
  Time Series Data - Time Series Structure

# Convert to appropriate Data Types necessary - DataFrame['Column_Name'].astype(float or int) and Multiple Levels Dummy Variables - pd.get_dummies(DataFrame,prefix=
['Column Name']) - Discrete Binary
Or getting Specific Data Types using DataFrame._get_numeric_data() or Dropping Unnecessary Rows/Columns using df_df.iloc[[0,1,2,3,4],0:4].


# Dealing with imbalanced Data - Stratified Sampling
# Getting specific data from SQL with different JOINS
# IFELSE Statements for cleansing and extraction
# Powerful Visual Presentations with Plotly
# How to use Classes - Object Oriented Programming and Selenium for Automation in Data Science.

